#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 329)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,   215,  -123,   145,    70,    65,    91,   103,     7,   226,
    91,     8,    85,    84,   126,   227,   137,   217,    44,   218,
   219,   220,    68,    69,   152,   130,   131,    67,   138,    67,
   185,   149,    18,  -123,  -123,  -123,    44,    71,    67,   220,
    47,    48,    67,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   139,    52,    47,    48,   140,   141,    47,    48,
    67,    32,    45,    36,    38,    39,    40,    41,    18,    49,
    44,    52,   144,    28,   128,   127,    47,    48,     8,    32,
    45,    36,    38,    39,    40,    41,   165,    49,    44,    52,
    96,    28,   166,   167,   168,   169,   170,    14,   171,   122,
   173,   174,    18,    97,    67,    99,   100,    60,   101,   102,
    47,    48,    60,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,   180,    28,   181,   114,    47,    48,
     8,    32,    45,    36,    38,    39,    40,    41,   185,    49,
    44,    52,    67,   220,   197,   200,    60,   106,   203,   204,
    86,    18,   214,    83,    18,   114,    82,    67,    44,    81,
   222,   220,    47,    48,  -142,    32,    45,    36,    38,    39,
    40,    41,    18,    49,    80,    52,    79,    78,    77,    76,
    47,    48,    75,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,     8,   145,   -79,    64,    47,    48,
    63,    32,    45,    36,    38,    39,    40,    41,   237,    49,
    44,    52,   185,    28,   238,   200,   152,    60,   222,    54,
    53,   242,    12,   149,    18,   244,   185,    67,    44,    18,
   249,    28,    47,    48,    11,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   251,    52,    44,   252,   253,    28,
    47,    48,     9,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    95,    52,    44,   135,    60,    28,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,    44,   nil,   nil,    28,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,    28,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,    44,    52,   nil,   145,   nil,   nil,
    47,    48,     8,    32,    45,    36,    38,    39,    40,    41,
   nil,    49,    44,    52,   nil,    28,   nil,   nil,   152,   nil,
   nil,   nil,   nil,   nil,   nil,   149,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,    44,    52,   nil,    28,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,    44,    52,   nil,    28,   nil,   nil,
   nil,   nil,   nil,   116,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,    44,   nil,   nil,    28,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,    28,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,    44,   nil,
   nil,    28,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   nil,    52,    44,   nil,   nil,    28,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   nil,    52,   nil,   nil,   nil,   nil,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
    44,    52,   nil,   145,   nil,   nil,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,   nil,    49,    44,    52,
   nil,   220,   nil,   nil,   152,   nil,   nil,   nil,   nil,   nil,
   nil,   149,    18,   nil,   nil,   nil,    44,   nil,   nil,    28,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   nil,    52,    44,   nil,   nil,    28,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,    44,   nil,   nil,   220,   nil,   nil,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,   220,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,    44,   nil,
   nil,   220,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   nil,    52,    44,   nil,   nil,   220,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   nil,    52,    44,   nil,   nil,   220,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,    44,   nil,   nil,   220,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,   220,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,    44,    52,   nil,   145,   nil,   nil,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
   nil,    49,   nil,    52,   nil,   nil,   nil,   nil,   152,   nil,
    44,   nil,   nil,   145,   nil,   149,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,   152,    49,    44,    52,   nil,    28,
   nil,   149,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
   nil,    49,    44,    52,   nil,   145,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,   nil,    49,   nil,    52,
   nil,   nil,   nil,   149,    18,   nil,   nil,   nil,   nil,   nil,
   nil,    96,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,    97,    52,    99,   100,   nil,   101,
   102,   208,   209,    96,   nil,   nil,   nil,    94,   nil,   nil,
   nil,    95,   nil,   nil,   nil,   nil,    97,   nil,    99,   100,
   nil,   101,   102,   186,   187,   nil,   188,   189,   190,   nil,
   nil,   nil,   nil,   191,   192,   193,   194,   195,   196 ]

racc_action_check = [
   106,   183,    20,   106,    22,    17,    54,    56,     0,   190,
   128,     0,    49,    49,    83,   190,    97,   186,   249,   186,
   186,   249,    21,    21,   106,    89,    89,    17,    98,    56,
   183,   106,   106,    20,    20,    20,   242,    22,    54,   242,
   106,   106,   128,   106,   106,   106,   106,   106,   106,   106,
   249,   106,   100,   106,    83,    83,   101,   102,   249,   249,
   103,   249,   249,   249,   249,   249,   249,   249,   242,   249,
   222,   249,   105,   222,    87,    84,   242,   242,   222,   242,
   242,   242,   242,   242,   242,   242,   116,   242,     8,   242,
   107,     8,   117,   118,   119,   120,   121,     8,   125,    81,
   133,   134,   222,   107,    75,   107,   107,   137,   107,   107,
   222,   222,   138,   222,   222,   222,   222,   222,   222,   222,
     8,   222,   220,   222,   143,   220,   144,    74,     8,     8,
   220,     8,     8,     8,     8,     8,     8,     8,   146,     8,
   219,     8,    65,   219,   149,   150,    63,    62,   175,   176,
    52,   181,   182,    46,   220,   184,    45,   253,   217,    44,
   188,   217,   220,   220,    42,   220,   220,   220,   220,   220,
   220,   220,   219,   220,    41,   220,    40,    39,    38,    36,
   219,   219,    33,   219,   219,   219,   219,   219,   219,   219,
   217,   219,   208,   219,   197,   208,    18,    16,   217,   217,
    13,   217,   217,   217,   217,   217,   217,   217,   209,   217,
   204,   217,   210,   204,   211,   216,   208,    12,   218,    11,
     9,   221,     7,   208,   208,   226,   236,   237,    64,   238,
   239,    64,   208,   208,     5,   208,   208,   208,   208,   208,
   208,   208,   204,   208,   243,   208,    68,   245,   246,    68,
   204,   204,     1,   204,   204,   204,   204,   204,   204,   204,
    64,   204,    93,   204,    69,    95,    96,    69,    64,    64,
   nil,    64,    64,    64,    64,    64,    64,    64,    68,    64,
   nil,    64,    70,   nil,   nil,    70,    68,    68,   nil,    68,
    68,    68,    68,    68,    68,    68,    69,    68,   nil,    68,
    71,   nil,   nil,    71,    69,    69,   nil,    69,    69,    69,
    69,    69,    69,    69,    70,    69,   nil,    69,   nil,   nil,
   nil,   nil,    70,    70,   nil,    70,    70,    70,    70,    70,
    70,    70,    71,    70,   145,    70,   nil,   145,   nil,   nil,
    71,    71,   145,    71,    71,    71,    71,    71,    71,    71,
   nil,    71,   135,    71,   nil,   135,   nil,   nil,   145,   nil,
   nil,   nil,   nil,   nil,   nil,   145,   145,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   145,   145,   nil,   145,   145,   145,
   145,   145,   145,   145,   135,   145,    77,   145,   nil,    77,
   nil,   nil,   135,   135,   nil,   135,   135,   135,   135,   135,
   135,   135,   nil,   135,    76,   135,   nil,    76,   nil,   nil,
   nil,   nil,   nil,    76,   nil,   nil,   nil,   nil,    77,   nil,
   nil,   nil,    78,   nil,   nil,    78,    77,    77,   nil,    77,
    77,    77,    77,    77,    77,    77,    76,    77,   nil,    77,
    79,   nil,   nil,    79,    76,    76,   nil,    76,    76,    76,
    76,    76,    76,    76,    78,    76,   nil,    76,    80,   nil,
   nil,    80,    78,    78,   nil,    78,    78,    78,    78,    78,
    78,    78,    79,    78,   nil,    78,    94,   nil,   nil,    94,
    79,    79,   nil,    79,    79,    79,    79,    79,    79,    79,
    80,    79,   nil,    79,   nil,   nil,   nil,   nil,    80,    80,
   nil,    80,    80,    80,    80,    80,    80,    80,    94,    80,
   200,    80,   nil,   200,   nil,   nil,    94,    94,   nil,    94,
    94,    94,    94,    94,    94,    94,   nil,    94,   196,    94,
   nil,   196,   nil,   nil,   200,   nil,   nil,   nil,   nil,   nil,
   nil,   200,   200,   nil,   nil,   nil,    23,   nil,   nil,    23,
   200,   200,   nil,   200,   200,   200,   200,   200,   200,   200,
   196,   200,   nil,   200,    28,   nil,   nil,    28,   196,   196,
   nil,   196,   196,   196,   196,   196,   196,   196,    23,   196,
   nil,   196,   195,   nil,   nil,   195,   nil,   nil,   nil,    23,
    23,    23,    23,    23,    23,    23,    28,    23,   nil,    23,
   194,   nil,   nil,   194,    28,    28,   nil,    28,    28,    28,
    28,    28,    28,    28,   195,    28,   nil,    28,   193,   nil,
   nil,   193,   195,   195,   nil,   195,   195,   195,   195,   195,
   195,   195,   194,   195,   nil,   195,   192,   nil,   nil,   192,
   194,   194,   nil,   194,   194,   194,   194,   194,   194,   194,
   193,   194,   nil,   194,   191,   nil,   nil,   191,   193,   193,
   nil,   193,   193,   193,   193,   193,   193,   193,   192,   193,
   nil,   193,   189,   nil,   nil,   189,   192,   192,   nil,   192,
   192,   192,   192,   192,   192,   192,   191,   192,   nil,   192,
   187,   nil,   nil,   187,   191,   191,   nil,   191,   191,   191,
   191,   191,   191,   191,   189,   191,   nil,   191,   nil,   nil,
   nil,   nil,   189,   189,   nil,   189,   189,   189,   189,   189,
   189,   189,   187,   189,   185,   189,   nil,   185,   nil,   nil,
   187,   187,   nil,   187,   187,   187,   187,   187,   187,   187,
   nil,   187,   nil,   187,   nil,   nil,   nil,   nil,   185,   nil,
   180,   nil,   nil,   180,   nil,   185,   185,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   185,   185,   nil,   185,   185,   185,
   185,   185,   185,   185,   180,   185,   174,   185,   nil,   174,
   nil,   180,   180,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   180,   180,   nil,   180,   180,   180,   180,   180,   180,   180,
   nil,   180,   152,   180,   nil,   152,   nil,   nil,   174,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   174,   174,   nil,   174,
   174,   174,   174,   174,   174,   174,   nil,   174,   nil,   174,
   nil,   nil,   nil,   152,   152,   nil,   nil,   nil,   nil,   nil,
   nil,   178,   152,   152,   nil,   152,   152,   152,   152,   152,
   152,   152,   nil,   152,   178,   152,   178,   178,   nil,   178,
   178,   178,   178,    55,   nil,   nil,   nil,    55,   nil,   nil,
   nil,    55,   nil,   nil,   nil,   nil,    55,   nil,    55,    55,
   nil,    55,    55,   148,   148,   nil,   148,   148,   148,   nil,
   nil,   nil,   nil,   148,   148,   148,   148,   148,   148 ]

racc_action_pointer = [
    -2,   252,   nil,   nil,   nil,   232,   nil,   211,    83,   220,
   nil,   216,   180,   184,   nil,   nil,   193,   -10,   147,   nil,
   -12,   -23,   -10,   541,   nil,   nil,   nil,   nil,   559,   nil,
   nil,   nil,   nil,   133,   nil,   nil,   171,   nil,   170,   169,
   168,   166,   109,   nil,   110,   151,    98,   nil,   nil,   -44,
   nil,   nil,    91,   nil,     1,   859,    -8,   nil,   nil,   nil,
   nil,   nil,   121,   109,   223,   105,   nil,   nil,   241,   259,
   277,   295,   nil,   nil,   118,    67,   399,   381,   417,   435,
   453,    94,   nil,     9,    19,   nil,   nil,    70,   nil,    19,
   nil,   nil,   nil,   250,   471,   257,   229,    -2,    10,   nil,
    31,    35,    36,    23,   nil,    45,    -5,    86,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    77,    83,    84,    85,
    86,    87,   nil,   nil,   nil,    93,   nil,   nil,     5,   nil,
   nil,   nil,   nil,    91,    97,   347,   nil,    70,    75,   nil,
   nil,   nil,   nil,    96,   123,   329,   100,   nil,   854,   136,
   114,   nil,   797,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   771,   139,   145,   nil,   837,   nil,
   745,   114,   143,    -8,   146,   719,   -13,   685,   152,   667,
   -20,   649,   631,   613,   595,   577,   523,   181,   nil,   nil,
   505,   nil,   nil,   nil,   205,   nil,   nil,   nil,   187,   200,
   174,   210,   nil,   nil,   nil,   nil,   184,   153,   210,   135,
   117,   190,    65,   nil,   nil,   nil,   190,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   188,   190,   192,   199,
   nil,   nil,    31,   235,   nil,   238,   244,   nil,   nil,    13,
   nil,   nil,   nil,   120,   nil,   nil ]

racc_action_default = [
  -154,  -154,    -1,    -2,    -3,    -5,   -16,  -154,  -154,  -154,
    -4,  -154,  -154,   -24,   -25,   -26,   -28,   -31,  -148,  -106,
  -107,  -110,  -113,  -154,  -115,  -116,  -117,  -118,  -154,  -120,
  -121,  -122,  -124,  -154,  -126,  -127,  -154,  -129,  -154,  -154,
  -154,  -154,  -135,  -136,  -140,  -154,  -154,  -146,  -147,  -154,
  -151,  -152,  -154,   256,  -154,  -154,   -36,   -37,   -39,   -40,
   -79,   -23,   -56,  -154,  -154,  -154,   -30,  -148,  -154,  -154,
  -154,  -154,  -114,  -123,  -154,  -154,  -154,  -154,  -154,  -154,
  -154,  -138,  -139,  -154,  -154,  -150,  -153,    -6,    -8,   -12,
   -10,   -11,   -17,  -154,  -154,  -154,  -154,  -154,  -154,   -44,
   -46,   -48,   -49,  -154,   -35,   -58,  -154,   -33,   -27,   -29,
  -108,  -109,  -111,  -112,  -119,  -125,  -154,  -154,  -154,  -154,
  -154,  -154,  -137,  -141,  -143,  -154,  -145,  -149,  -154,    -9,
   -13,   -14,   -18,  -154,   -21,  -154,   -41,  -154,  -154,   -45,
   -47,   -50,   -34,   -63,  -154,  -154,   -57,   -65,  -154,  -154,
   -82,   -84,  -154,   -87,   -88,   -89,   -91,   -92,   -93,   -94,
   -95,   -96,  -103,  -104,  -105,  -128,  -130,  -131,  -132,  -133,
  -134,  -144,    -7,   -19,  -154,  -154,   -73,   -42,  -154,   -32,
  -154,  -154,  -154,  -154,  -105,  -154,  -154,  -154,  -154,  -154,
  -154,  -154,  -154,  -154,  -154,  -154,  -154,  -154,   -38,   -78,
  -154,   -86,   -20,   -22,  -154,   -43,   -51,   -52,  -154,  -154,
   -64,   -59,   -61,   -62,   -15,   -90,   -83,  -154,  -154,  -154,
  -154,  -154,  -154,   -69,   -70,   -75,  -154,   -77,   -97,   -98,
   -99,  -100,  -101,  -102,   -85,   -72,   -53,  -154,  -154,  -154,
   -68,   -74,  -154,  -154,   -76,  -154,   -55,   -81,   -60,  -154,
   -67,   -71,   -54,  -154,   -66,   -80 ]

racc_goto_table = [
    66,    17,   146,    55,   133,    56,   175,    88,   198,   212,
   213,    92,    15,   223,    73,   112,   113,   110,   111,     1,
   245,    74,   246,   221,   211,   225,   216,   228,   229,   230,
   231,   232,   233,   234,   201,   125,    72,    90,   123,   104,
   124,   183,   207,   240,     2,     3,     4,   198,   109,   132,
     5,    10,    87,   239,   107,   241,    56,    17,   115,    73,
    73,    73,    73,   129,    93,    13,   248,   213,   108,   117,
   118,   119,   120,   121,    61,   235,   210,   198,   250,    62,
   105,   172,   143,   179,   202,   254,   142,   134,   199,   136,
   205,   206,   nil,   243,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   236,   nil,   nil,   nil,   nil,   nil,
   nil,    90,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   176,   178,
   177,    56,   nil,   nil,   nil,   nil,   nil,   nil,   184,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   134,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   176,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    74,   nil,   176,   nil,   nil,   nil,   nil,
   247,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   255 ]

racc_goto_check = [
    11,    18,    37,    14,    17,    28,    19,     8,    12,    41,
    42,    15,    22,    47,    59,    60,    60,    58,    58,     1,
    38,    18,    39,    45,    40,    45,    51,    45,    45,    45,
    45,    45,    45,    52,    53,    62,    63,    11,    74,    11,
    75,    37,    36,    47,     2,     3,     4,    12,    11,    15,
     5,     6,     7,    45,    14,    45,    28,    18,    11,    59,
    59,    59,    59,    10,    16,    20,    41,    42,    22,    18,
    18,    18,    18,    18,    21,    19,    37,    12,    45,    24,
    25,     8,    26,    27,    17,    45,    11,    18,    30,    28,
    34,    35,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    37,   nil,   nil,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,    14,
    28,    28,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    18,   nil,    18,   nil,   nil,   nil,   nil,
    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    11 ]

racc_goto_pointer = [
   nil,    19,    44,    45,    46,    50,    46,    -2,   -47,   nil,
   -26,   -17,  -141,   nil,    -9,   -44,     9,   -90,    -7,  -129,
    57,    61,     4,   nil,    66,    18,   -23,   -60,    -7,   nil,
   -61,   nil,   nil,   nil,   -88,   -87,  -136,  -104,  -217,  -215,
  -157,  -172,  -171,   nil,   nil,  -164,   nil,  -175,   nil,   nil,
   nil,  -159,  -167,  -118,   nil,   nil,   nil,   nil,   -51,    -9,
   -55,   nil,   -48,    13,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -45,   -43,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   182,   nil,   nil,   nil,    89,
   nil,    34,   147,     6,   nil,   nil,   nil,   nil,   164,   nil,
   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,    35,    57,
   224,    58,    59,    98,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    26,   163,   157,   148,   158,   nil,   159,   160,
   161,   150,   151,   153,   154,   155,   156,   162,    19,    20,
    21,    22,    23,    24,    25,    27,    29,    30,    31,    33,
    37,    42,    43,    46,   nil,   nil,    50,    51 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 61, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  2, 63, :_reduce_4,
  0, 66, :_reduce_none,
  3, 66, :_reduce_6,
  3, 67, :_reduce_7,
  1, 67, :_reduce_none,
  2, 68, :_reduce_9,
  1, 69, :_reduce_none,
  1, 69, :_reduce_11,
  0, 70, :_reduce_12,
  1, 70, :_reduce_13,
  1, 70, :_reduce_14,
  3, 72, :_reduce_15,
  1, 65, :_reduce_none,
  4, 64, :_reduce_17,
  5, 64, :_reduce_18,
  3, 76, :_reduce_19,
  3, 77, :_reduce_20,
  1, 77, :_reduce_none,
  4, 75, :_reduce_22,
  3, 73, :_reduce_23,
  2, 73, :_reduce_24,
  1, 80, :_reduce_25,
  1, 80, :_reduce_26,
  3, 82, :_reduce_27,
  1, 82, :_reduce_none,
  3, 83, :_reduce_29,
  2, 83, :_reduce_30,
  1, 83, :_reduce_none,
  4, 81, :_reduce_32,
  2, 84, :_reduce_33,
  3, 74, :_reduce_34,
  2, 74, :_reduce_35,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 90, :_reduce_none,
  1, 89, :_reduce_none,
  1, 89, :_reduce_none,
  3, 91, :_reduce_41,
  4, 91, :_reduce_42,
  5, 92, :_reduce_43,
  1, 93, :_reduce_44,
  2, 93, :_reduce_45,
  1, 93, :_reduce_46,
  2, 93, :_reduce_47,
  1, 93, :_reduce_48,
  1, 93, :_reduce_49,
  2, 93, :_reduce_50,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  2, 95, :_reduce_53,
  4, 96, :_reduce_54,
  1, 98, :_reduce_none,
  0, 85, :_reduce_none,
  2, 85, :_reduce_57,
  0, 86, :_reduce_none,
  3, 86, :_reduce_59,
  3, 100, :_reduce_60,
  1, 100, :_reduce_none,
  1, 101, :_reduce_none,
  0, 87, :_reduce_none,
  2, 87, :_reduce_64,
  1, 103, :_reduce_none,
  6, 104, :_reduce_66,
  5, 104, :_reduce_67,
  4, 106, :_reduce_68,
  3, 106, :_reduce_69,
  1, 107, :_reduce_none,
  3, 107, :_reduce_71,
  3, 79, :_reduce_72,
  1, 79, :_reduce_none,
  4, 108, :_reduce_74,
  3, 108, :_reduce_75,
  4, 109, :_reduce_76,
  3, 109, :_reduce_77,
  2, 110, :_reduce_78,
  1, 88, :_reduce_79,
  3, 99, :_reduce_80,
  1, 99, :_reduce_none,
  1, 97, :_reduce_none,
  3, 97, :_reduce_83,
  1, 111, :_reduce_none,
  3, 111, :_reduce_85,
  2, 112, :_reduce_86,
  1, 112, :_reduce_none,
  1, 113, :_reduce_none,
  1, 114, :_reduce_none,
  3, 114, :_reduce_90,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  3, 116, :_reduce_97,
  3, 116, :_reduce_98,
  3, 116, :_reduce_99,
  3, 116, :_reduce_100,
  3, 116, :_reduce_101,
  3, 116, :_reduce_102,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  1, 117, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  3, 118, :_reduce_108,
  3, 118, :_reduce_109,
  1, 118, :_reduce_none,
  3, 120, :_reduce_111,
  3, 120, :_reduce_112,
  1, 120, :_reduce_none,
  2, 121, :_reduce_114,
  1, 121, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  3, 123, :_reduce_119,
  1, 124, :_reduce_none,
  1, 124, :_reduce_none,
  1, 126, :_reduce_none,
  1, 126, :_reduce_none,
  1, 127, :_reduce_124,
  3, 102, :_reduce_125,
  1, 102, :_reduce_none,
  1, 129, :_reduce_none,
  4, 125, :_reduce_128,
  1, 125, :_reduce_none,
  4, 130, :_reduce_130,
  4, 130, :_reduce_131,
  4, 130, :_reduce_132,
  4, 130, :_reduce_133,
  4, 130, :_reduce_134,
  1, 128, :_reduce_none,
  1, 128, :_reduce_none,
  3, 131, :_reduce_137,
  2, 131, :_reduce_138,
  2, 131, :_reduce_139,
  1, 131, :_reduce_140,
  3, 132, :_reduce_141,
  1, 133, :_reduce_none,
  1, 134, :_reduce_none,
  2, 135, :_reduce_144,
  1, 135, :_reduce_145,
  1, 122, :_reduce_146,
  1, 122, :_reduce_147,
  1, 71, :_reduce_148,
  3, 119, :_reduce_149,
  2, 119, :_reduce_150,
  1, 119, :_reduce_none,
  1, 136, :_reduce_none,
  2, 137, :_reduce_153 ]

racc_reduce_n = 154

racc_shift_n = 256

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :left_paren => 8,
  :right_paren => 9,
  :INSERT => 10,
  :INTO => 11,
  :VALUES => 12,
  :SELECT => 13,
  :asterisk => 14,
  :AS => 15,
  :FROM => 16,
  :CROSS => 17,
  :JOIN => 18,
  :INNER => 19,
  :LEFT => 20,
  :OUTER => 21,
  :RIGHT => 22,
  :FULL => 23,
  :ON => 24,
  :USING => 25,
  :WHERE => 26,
  :GROUP => 27,
  :HAVING => 28,
  :NOT => 29,
  :BETWEEN => 30,
  :AND => 31,
  :IN => 32,
  :LIKE => 33,
  :IS => 34,
  :NULL => 35,
  :EXISTS => 36,
  :identifier => 37,
  :OR => 38,
  :equals_operator => 39,
  :not_equals_operator => 40,
  :less_than_operator => 41,
  :greater_than_operator => 42,
  :less_than_or_equals_operator => 43,
  :greater_than_or_equals_operator => 44,
  :plus_sign => 45,
  :minus_sign => 46,
  :solidus => 47,
  :CURRENT_USER => 48,
  :period => 49,
  :COUNT => 50,
  :AVG => 51,
  :MAX => 52,
  :MIN => 53,
  :SUM => 54,
  :E => 55,
  :quote => 56,
  :character_string_literal => 57,
  :DATE => 58,
  :date_string => 59 }

racc_nt_base = 60

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 21)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_9(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_20(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_27(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_42(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_43(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_60(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 65 omitted

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_72(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_80(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.racc', 191)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_86(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_90(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'parser.racc', 213)
  def _reduce_97(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 214)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 215)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 216)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 103 omitted

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_108(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_109(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 237)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_114(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_119(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

module_eval(<<'.,.,', 'parser.racc', 260)
  def _reduce_124(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 126 omitted

# reduce 127 omitted

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.racc', 274)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 135 omitted

# reduce 136 omitted

module_eval(<<'.,.,', 'parser.racc', 286)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 287)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 292)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 142 omitted

# reduce 143 omitted

module_eval(<<'.,.,', 'parser.racc', 301)
  def _reduce_144(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 302)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_146(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 306)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 310)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 314)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 315)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 151 omitted

# reduce 152 omitted

module_eval(<<'.,.,', 'parser.racc', 322)
  def _reduce_153(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
